[1] 02/21/10

* downloaded WP 2.9.2

* had to install php on leopard 
** http://foundationphp.com/tutorials/php_leopard.php was very useful
** once I restarted apache, i was able to run the php files.

* added /usr/local/mysql/bin/mysql to my PATH var:
** export PATH=/lots/of/paths:/more/paths:/usr/local/mysql/bin/mysql

* then, had to modify the default mysql socket that php looks for!
** http://foolswisdom.com/mac-wordpress-error-establishing-a-database-connection/
** changed 
	;mysql.default_socket = /var/mysql/mysql.sock
to 
	mysql.default_socket = /tmp/mysql.sock
And I was up and running!

* username: admin, pwd: natalie

IDEAS:
* a widget that shows my most recent TypePad activity, just like my Twitter widgetizer
* moving serious nataliepo.typepad.com posts over to my nataliepo.com blog
* making my nataliepo.com serve content directly out of a typepad blog


[2] 02/22/10
* starting in the AM to investigate how the Twitter sidebar widget was created.
* started a github project called 'Tydget' for a Typepad Widget as a sidebar.

* investigating the User definitions in Motion:
** /Library/Python/2.6/site-packages/typepadapp-1.0.2-py2.6egg/typepadapp/models/ defines the objects in the Typepad app; Motion extends these models and makes its own template tags from there.
** /Library/Python/2.6/site-packages/typepad-1.0-py2.6.egg/typepad/api.py defines how all of the api endpoints are called in Motion.

* back to JSON docs again: http://api.jquery.com/jQuery.getJSON/

LEFT TO DO:
*Having a hard time getting Javascript/JSON/JQuery working in a standard html page.  Should do this in Django, instead.

http://api.typepad.com/users/6p00e5539faa3b8833/events.json?max-results=5 is what I want to work wtih.  http://docs.djangoproject.com/en/dev/ref/request-response/ is probably a good place to start.

PICKING UP AGAIN:
* having fun with Django tonight.  already got a view working!!!

nataliepos XID = 6p00e5539faa3b8833


Found a resource (http://pkarl.com/articles/how-we-built-feed-apart-using-django-twitter-and-f/) that shows how they build a Django aggregator, but i dont understand how Django makes API requests.

Also useful: http://uswaretech.com/blog/2009/02/how-we-built-a-twitter-application/

[3] 2/23/10
<< MISSING NOTES >>

[4] 2/24/10
<< MISSING NOTES >>

[5] 2/25/10

2/25/10

OPEN QUESTIONS:

typepad_api_url = 'http://api.typepad.com/users/%s/events.json?max-results=5' % natalies_xid

This pulls all of my events, but this

typepad_api_url = 'http://api.typepad.com/groups/%s/events.json?max-results=5&start-index=1' % mmmeows_group_xid

pulls only 5 events from mmmeow. Why?

[6] 2/26/10
<< MISSING ENTRY >>


[7] 2/27/10

This day went to TPM to write the MostRecc plugin to avoid costly sql queries for most recent favorites over thousands of blogs in one category

[8] 2/28/10

Continued TPM work and a good-bye party for Tracie and Wayne. :(

[9] 03/01/10

Tested the MostRecc plugin in TPM's env and deployed in the evening.  

Picked back up on the django work and I have the following problems:
* having a really tough time learning how to include the useful things in the typepadapp (django) like template filters or objects
* it doesn't make sense to go from js -> django -> js again.  should just parse the json directly although it's complicated.  at least django templating is giving me practice and helping me learn the json object formats.

[10] 03/02/10

Got the javascript parsing html+js to work!  No Django is involved, but the groups/<xid>.js template is useful for faster css styling since it's not my strong suit.  To pick up where I left off:
	cp django_frontend/another_site.html /Library/WebServer/Documents/
	cp django_frontend/typepad_parsing.js /Library/WebServer/Documents
then view 
	http://localhost/another_site.html 
to make sure the most recent 5 events appear on the page.

LEFT TO DO:
	* clean up the styling of the widget to make it a little bit more presentable
	* replace the (untitled entries) with the entry body truncated
	* create the django wrapper for easy html inserts/badging.
	
Handy Links:
	http://developer.yahoo.com/common/json.html -- Examples with javascript and json using the Yahoo api
	http://www.flickr.com/services/api/response.json.html -- flick API usage with js and json
	